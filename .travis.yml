language: go
go:
- 1.9
addons:
  apt:
    packages:
    - upx-ucl
    - musl
env:
  global:
  - COMMIT=${TRAVIS_COMMIT::8}
before_cache:
- rm -rf $GOPATH/src/github.com/$TRAVIS_REPO_SLUG/*
- rm -rf $GOPATH/pkg/**/github.com/$TRAVIS_REPO_SLUG
cache:
  directories:
    - $GOPATH/src
    - $GOPATH/pkg
jobs:
  inlude:
    - stage: "Dependencies"
      script: 
        - go get -v -t -d ./...
    - stage: "Check tools"
      script:
        - go get honnef.co/go/tools/cmd/gosimple
        - go get github.com/golang/lint/golint
        - go get github.com/gordonklaus/ineffassign
        - go get go get github.com/GoASTScanner/gas/cmd/gas/...
    - stage: "Checks"
      script:
        - $GOPATH/bin/gosimple ./...
    - stage: "Checks"
      script:
        - $GOPATH/bin/gofmt -s -d .
    - stage: "Checks"
      script:
        - $GOPATH/bin/go vet ./...
    - stage: "Checks"
      script:
        - $GOPATH/bin/golint ./...
    - stage: "Checks"
      script:
        - $GOPATH/bin/ineffassign ./
    - stage: "Checks"
      script:      
        - $GOPATH/bin/gas ./...
    - stage: "Build"
      env:
        - GOOS=linux
        - GOARCH=amd64
      script:
        - CC=musl-gcc CCGLAGS="-static" go build -ldflags '-linkmode external -s -w -extldflags "-static"' -a -o /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy .
        - cp -r systemd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
        - cp config.sample.yaml /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
    - stage: "Build"
      env:
        - GOOS=darwin
        - GOARCH=amd64
      if: branch = master AND tag IS present
      script:
        - go build -ldflags -s -a -o /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy .
        - cp -r systemd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
        - cp config.sample.yaml /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
    - stage: "Build"
      env:
        - GOOS=windows
        - GOARCH=amd64
      if: branch = master AND tag IS present
      script:
        - go build -ldflags -s -a -o /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy.exe .
        - cp -r systemd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
        - cp config.sample.yaml /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
    - stage: "Build"
      env:
        - GOOS=linux
        - GOARCH=arm
        - GOARM=5
      if: branch = master AND tag IS present
      script:
        - go build -ldflags -s -a -o /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy .
        - cp -r systemd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
        - cp config.sample.yaml /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/
    - stage: "Package"
      env: 
        - GOOS=linux
        - GOARCH=amd64
      if: branch = master AND tag IS present
      script:
        - upx -qq --best /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy
        - cd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/; tar czf /tmp/vsphere-graphite_$(GOOS)_$(GOARCH)_${COMMIT}.tgz ./spliceproxy ./config.sample.yaml ./systemd
    - stage: "Package"
      env: 
        - GOOS=darwin
        - GOARCH=amd64
      if: branch = master AND tag IS present
      script:
        - upx -qq --best /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy
        - cd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/; tar czf /tmp/vsphere-graphite_$(GOOS)_$(GOARCH)_${COMMIT}.tgz ./spliceproxy ./config.sample.yaml ./systemd
    - stage: "Package"
      env: 
        - GOOS=windows
        - GOARCH=amd64
      if: branch = master AND tag IS present
      script:
        - upx -qq --best /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy
        - cd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/; tar czf /tmp/vsphere-graphite_$(GOOS)_$(GOARCH)_${COMMIT}.tgz ./spliceproxy ./config.sample.yaml ./systemd
    - stage: "Package"
      env: 
        - GOOS=linux
        - GOARCH=arm
      if: branch = master AND tag IS present
      script:
        - upx -qq --best /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/spliceproxy
        - cd /tmp/${COMMIT}/$(GOOS)/$(GOARCH)/; tar czf /tmp/vsphere-graphite_$(GOOS)_$(GOARCH)_${COMMIT}.tgz ./spliceproxy ./config.sample.yaml ./systemd

install:
- go get -v -t -d ./...
- GOOS=linux GOARCH=amd64 go get honnef.co/go/tools/cmd/gosimple
- GOOS=linux GOARCH=amd64 go get github.com/golang/lint/golint
- GOOS=linux GOARCH=amd64 go get github.com/gordonklaus/ineffassign
- GOOS=linux GOARCH=amd64 go get github.com/GoASTScanner/gas
- $GOPATH/bin/gosimple ./...
- $GOPATH/bin/gofmt -s -d .
- $GOPATH/bin/go vet ./...
- $GOPATH/bin/golint ./...
- $GOPATH/bin/ineffassign ./
- $GOPATH/bin/gas ./...
- go build $(BUILD_FLAGS) -o /tmp/$(GOOS)/$(GOARCH)/spliceproxy$(SUFFIX) .
before_deploy:
- upx -qq --best /tmp/$(GOOS)/$(GOARCH)/spliceproxy$(SUFFIX)
- cp -r systemd /tmp/
- cp config.sample.yaml /tmp/
- cd /tmp/; tar czf /tmp/vsphere-graphite_$(GOOS)_$(GOARCH)_${COMMIT}.tgz ./spliceproxy$(SUFFIX) ./config.sample.yaml ./systemd
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: gQrD7qd+CrPyBrpOG8mVNLZtcjMAavW3y+vcavNdlb16Mf9aoEIHdiMhv4Peq5hzfkkS8DgtCY7WwFI2KFtCyQNIVM/G6qlaql2OndYRKwGbD+d3sMniPAOulLM1QJ8Kkm4vvTbxK7kqwyL2CmNFEGPk8tQifhmVRNwSCIo5T1BlBVqD9tmYQ5uOq1trXbyY+GyCQ2a4Ff6zZFja4gb8iMNf4Op33pRFnFJrV7di4+ylJpXKjicQ0H0xM74BASD7aT9jA6+Uk8fsr8h7QKeMdovKp491nhKlVvivKNtB8roB52yQFNgjHJM8TJu4/psx11YOYUZMWiBjCdbzb4/gQt153dduAfJXPP/sQWjsxLLlonHtxS/xKjAvEw2Ei+9gMvvzwlhibYna+PYWfvMXGSwyojfNoGiJiBX8bm30ARSfhLIZepDU9AVRE62CR2ZESSegWeOJoCxTClYcGjDeXoxECpEtqOwbrQRVROHlkH2pLg3eJAzb2rQRT0nnoGydg2LecUMDdxyqSvVct/7kZzWBhTEpHh2ZemPoTbe9YytPlCAKORdUe/u8p+gN92KHPx9TXSHY+k3iNvy+8n0Ot8gio7NTpwTOszVC/r3AtFoBlDEy5KpEbdtqv495F0n+ICZzEYnWVz1VgUhnViO0sExoTaWMB8Y7LmH/k+Ufp0Y=
  file_glob: true
  file: /tmp/spliceproxy_*.tgz  
  on:
    tags: true
